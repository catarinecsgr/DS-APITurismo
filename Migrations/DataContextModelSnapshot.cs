// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turismo_Catsy.Data;

#nullable disable

namespace TurismoCatsy.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Turismo_Catsy.Models.AtrativoTipo", b =>
                {
                    b.Property<int>("IdAtrativo")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("IdAtrativo", "IdTipo");

                    b.HasIndex("IdTipo");

                    b.ToTable("AtrativoTipos");

                    b.HasData(
                        new
                        {
                            IdAtrativo = 1,
                            IdTipo = 1
                        },
                        new
                        {
                            IdAtrativo = 2,
                            IdTipo = 1
                        },
                        new
                        {
                            IdAtrativo = 3,
                            IdTipo = 1
                        },
                        new
                        {
                            IdAtrativo = 4,
                            IdTipo = 1
                        },
                        new
                        {
                            IdAtrativo = 5,
                            IdTipo = 1
                        },
                        new
                        {
                            IdAtrativo = 6,
                            IdTipo = 2
                        },
                        new
                        {
                            IdAtrativo = 7,
                            IdTipo = 2
                        },
                        new
                        {
                            IdAtrativo = 8,
                            IdTipo = 2
                        },
                        new
                        {
                            IdAtrativo = 9,
                            IdTipo = 2
                        },
                        new
                        {
                            IdAtrativo = 10,
                            IdTipo = 2
                        },
                        new
                        {
                            IdAtrativo = 11,
                            IdTipo = 3
                        },
                        new
                        {
                            IdAtrativo = 12,
                            IdTipo = 3
                        },
                        new
                        {
                            IdAtrativo = 13,
                            IdTipo = 3
                        },
                        new
                        {
                            IdAtrativo = 14,
                            IdTipo = 3
                        },
                        new
                        {
                            IdAtrativo = 15,
                            IdTipo = 3
                        });
                });

            modelBuilder.Entity("Turismo_Catsy.Models.AtrativoTuristico", b =>
                {
                    b.Property<int>("IdAtrativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtrativo"));

                    b.Property<string>("DiaGratuidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Gratuidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Regiao")
                        .HasColumnType("int");

                    b.HasKey("IdAtrativo");

                    b.ToTable("AtrativoTuristicos");

                    b.HasData(
                        new
                        {
                            IdAtrativo = 1,
                            DiaGratuidade = "Terça e 1ª Quinta de cada mês",
                            Endereco = "Av. Paulista, 1578, Bela Vista, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "MASP",
                            Regiao = 5
                        },
                        new
                        {
                            IdAtrativo = 2,
                            DiaGratuidade = "Todos os dias",
                            Endereco = "Av. Rio Branco, 1269, Campos Elíseos, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "Museu das Favelas",
                            Regiao = 5
                        },
                        new
                        {
                            IdAtrativo = 3,
                            DiaGratuidade = "Sábado",
                            Endereco = "Praça da Luz, 2, Luz, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "Pinacoteca do Estado",
                            Regiao = 5
                        },
                        new
                        {
                            IdAtrativo = 4,
                            DiaGratuidade = "Sábado",
                            Endereco = "Praça da Luz, s/n, Luz, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "Museu da Língua Portuguesa",
                            Regiao = 5
                        },
                        new
                        {
                            IdAtrativo = 5,
                            DiaGratuidade = "Todos os dias",
                            Endereco = "R. Álvares Penteado, 112, Centro Histórico de São Paulo, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "CCBB SP",
                            Regiao = 5
                        },
                        new
                        {
                            IdAtrativo = 6,
                            DiaGratuidade = "Todos os dias",
                            Endereco = "Av. Pedro Álvares Cabral, 5300, Vila Mariana, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "Parque do Ibirapuera",
                            Regiao = 4
                        },
                        new
                        {
                            IdAtrativo = 7,
                            DiaGratuidade = "Todos os dias",
                            Endereco = "Av. Prof. Fonseca Rodrigues, 2001, Alto de Pinheiros, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "Parque Villa-Lobos",
                            Regiao = 3
                        },
                        new
                        {
                            IdAtrativo = 8,
                            DiaGratuidade = "Todos os dias",
                            Endereco = "Av. Afonso de Sampaio e Sousa, 951, Itaquera, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "Parque do Carmo",
                            Regiao = 2
                        },
                        new
                        {
                            IdAtrativo = 9,
                            DiaGratuidade = "Todos os dias",
                            Endereco = "Av. Francisco Matarazzo, 455, Água Branca, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "Parque da Água Branca",
                            Regiao = 3
                        },
                        new
                        {
                            IdAtrativo = 10,
                            DiaGratuidade = "Todos os dias",
                            Endereco = "Av. Henrique Chamma, 420, Pinheiros, São Paulo - SP",
                            Gratuidade = "V",
                            Nome = "Parque do Povo",
                            Regiao = 3
                        },
                        new
                        {
                            IdAtrativo = 11,
                            DiaGratuidade = " ",
                            Endereco = "R. Américo de Campos, 36, Liberdade, São Paulo - SP",
                            Gratuidade = "F",
                            Nome = "Alteza Doceria",
                            Regiao = 5
                        },
                        new
                        {
                            IdAtrativo = 12,
                            DiaGratuidade = " ",
                            Endereco = "Av. São Luís, 187, piso 02, lj 02, República, São Paulo - SP",
                            Gratuidade = "F",
                            Nome = "Gatcha (Cat Café/Cat Matcha Café)",
                            Regiao = 5
                        },
                        new
                        {
                            IdAtrativo = 13,
                            DiaGratuidade = " ",
                            Endereco = "R. Maria Cândida, 1153, Vila Guilherme, São Paulo - SP",
                            Gratuidade = "F",
                            Nome = "Antique Café",
                            Regiao = 1
                        },
                        new
                        {
                            IdAtrativo = 14,
                            DiaGratuidade = " ",
                            Endereco = "Av. Ipiranga, 200-21, Centro Histórico de São Paulo, São Paulo - SP",
                            Gratuidade = "F",
                            Nome = "Café Floresta",
                            Regiao = 5
                        },
                        new
                        {
                            IdAtrativo = 15,
                            DiaGratuidade = " ",
                            Endereco = "R. Silveira Martins, 86, lj 02, Sé, São Paulo - SP",
                            Gratuidade = "F",
                            Nome = "Cafeteria Gosto de Grão",
                            Regiao = 5
                        });
                });

            modelBuilder.Entity("Turismo_Catsy.Models.TipoTuristico", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipo"));

                    b.Property<string>("Segmento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipo");

                    b.ToTable("TipoTuristicos");

                    b.HasData(
                        new
                        {
                            IdTipo = 1,
                            Segmento = "Museu"
                        },
                        new
                        {
                            IdTipo = 2,
                            Segmento = "Parque"
                        },
                        new
                        {
                            IdTipo = 3,
                            Segmento = "Cafeteria"
                        });
                });

            modelBuilder.Entity("Turismo_Catsy.Models.AtrativoTipo", b =>
                {
                    b.HasOne("Turismo_Catsy.Models.AtrativoTuristico", "AtrativoTuristico")
                        .WithMany("AtrativoTipos")
                        .HasForeignKey("IdAtrativo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Turismo_Catsy.Models.TipoTuristico", "TipoTuristico")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtrativoTuristico");

                    b.Navigation("TipoTuristico");
                });

            modelBuilder.Entity("Turismo_Catsy.Models.AtrativoTuristico", b =>
                {
                    b.Navigation("AtrativoTipos");
                });
#pragma warning restore 612, 618
        }
    }
}
